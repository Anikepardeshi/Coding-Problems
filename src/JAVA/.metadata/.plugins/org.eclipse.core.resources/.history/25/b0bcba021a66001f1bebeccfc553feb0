package bank;

//1. Account.java (Abstraction)
//
//Purpose:
//- Account is an abstract class that serves as a blueprint for different types of bank accounts. 
//- It defines common properties (accountNumber and balance) and methods (deposit, withdraw, getBalance)
//  that all types of accounts will have.
//
//- Abstraction: 
//- The class is abstract, meaning it cannot be instantiated directly. 
//- It includes an abstract method calculateInterest(), which must be implemented by 
//  any subclass. 
//- This allows us to define a general structure for all accounts while leaving the 
//  specific implementation of interest calculation to each subclass.

public abstract class Account {

	protected String accountNumber;
	protected double balance;
	
	public Account(String accountNumber,double balance) {
		this.accountNumber = accountNumber;
		this.balance = balance;
	}
	
	public abstract void calculateInterest();
	
	public double getBalance() {
		return balance;
	}
	
	public void deposite(double amount) {
		if(amount > 0) {
			balance += amount;
		}
	}
	
	public void withdraw(double amount) {
		if(amount > 0 && amount <= balance) {
			balance -= amount;
		}
	}
}
